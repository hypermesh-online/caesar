/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleEconomicEngine,
  SimpleEconomicEngineInterface,
} from "../../../contracts/mocks/SimpleEconomicEngine";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_demurrageManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_antiSpeculationEngine",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stabilityPool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "chainId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "stateHash",
        type: "bytes32",
      },
    ],
    name: "CrossChainSync",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "DemurrageApplied",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "baseDemurrageRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDemurrageRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stabilityThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fiatDiscountFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gracePeriodsHours",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interventionThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rebalanceFrequency",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "emergencyThreshold",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IEconomicEngine.EconomicParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "EconomicParametersUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "EmergencyModeActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "activityType",
        type: "uint8",
      },
    ],
    name: "FiatActivityRecorded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "overallHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceStability",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "participationRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "demurrageEfficiency",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "antiSpeculationEffectiveness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "systemStress",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IEconomicEngine.EconomicHealthMetrics",
        name: "metrics",
        type: "tuple",
      },
    ],
    name: "HealthMetricsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ParameterProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IEconomicEngine.ReserveOperationType",
        name: "operationType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "ReserveOperationExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "penalty",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "SpeculationPenaltyApplied",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IEconomicEngine.InterventionType",
        name: "interventionType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StabilityIntervention",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountData",
    outputs: [
      {
        internalType: "uint256",
        name: "lastActivity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastDemurrageApplication",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDemurragePaid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPenaltiesPaid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVolume",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastTransactionTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "riskScore",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isNewUser",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "graceEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "activateEmergencyMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "addEmergencyOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "adjustParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "transactionType",
        type: "uint8",
      },
    ],
    name: "analyzeTransactionPattern",
    outputs: [
      {
        internalType: "uint256",
        name: "riskScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "penalty",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "antiSpeculationEngine",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "applyDemurrage",
    outputs: [
      {
        internalType: "uint256",
        name: "appliedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "penalty",
        type: "uint256",
      },
    ],
    name: "applySpeculationPenalty",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "calculateDemurrage",
    outputs: [
      {
        internalType: "uint256",
        name: "demurrageAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "chainStates",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "baseDemurrageRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDemurrageRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stabilityThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fiatDiscountFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gracePeriodsHours",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interventionThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rebalanceFrequency",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "emergencyThreshold",
            type: "uint256",
          },
        ],
        internalType: "struct IEconomicEngine.EconomicParameters",
        name: "parameters",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastSync",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "syncHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deactivateEmergencyMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "demurrageManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "economicParams",
    outputs: [
      {
        internalType: "uint256",
        name: "baseDemurrageRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDemurrageRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stabilityThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fiatDiscountFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gracePeriodsHours",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interventionThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rebalanceFrequency",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "emergencyThreshold",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "emergencyOperators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "endGracePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "exemptAccounts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fiatActivity",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFiatVolume",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastFiatActivity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "activityCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "discountEligible",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "discountPercentage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountEconomicData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lastActivity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastDemurrageApplication",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDemurragePaid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPenaltiesPaid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "transactionCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalVolume",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastTransactionTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "riskScore",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isNewUser",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "graceEndTime",
            type: "uint256",
          },
        ],
        internalType: "struct IEconomicEngine.AccountEconomicData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "chainId",
        type: "uint32",
      },
    ],
    name: "getChainEconomicState",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "baseDemurrageRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxDemurrageRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "stabilityThreshold",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fiatDiscountFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gracePeriodsHours",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "interventionThreshold",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rebalanceFrequency",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "emergencyThreshold",
                type: "uint256",
              },
            ],
            internalType: "struct IEconomicEngine.EconomicParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastSync",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "syncHash",
            type: "bytes32",
          },
        ],
        internalType: "struct IEconomicEngine.ChainEconomicState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getCurrentDemurrageRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getEconomicParameters",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "baseDemurrageRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDemurrageRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stabilityThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fiatDiscountFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gracePeriodsHours",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interventionThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rebalanceFrequency",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "emergencyThreshold",
            type: "uint256",
          },
        ],
        internalType: "struct IEconomicEngine.EconomicParameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getFiatActivityData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalFiatVolume",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastFiatActivity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activityCount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "discountEligible",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "discountPercentage",
            type: "uint256",
          },
        ],
        internalType: "struct IEconomicEngine.FiatActivityData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHealthMetrics",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "overallHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceStability",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "participationRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "demurrageEfficiency",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "antiSpeculationEffectiveness",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "systemStress",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct IEconomicEngine.EconomicHealthMetrics",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketMetrics",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalDemurrageCollected",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPenaltiesCollected",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageHoldingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "networkVelocity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "participationScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastMetricUpdate",
            type: "uint256",
          },
        ],
        internalType: "struct IEconomicEngine.MarketMetrics",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNetworkHealthIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getSpeculationRiskScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSystemHealth",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "priceStability",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "participationRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdate",
            type: "uint256",
          },
        ],
        internalType: "struct IEconomicEngine.SystemHealth",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "healthMetrics",
    outputs: [
      {
        internalType: "uint256",
        name: "overallHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceStability",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidityHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "participationRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "demurrageEfficiency",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "antiSpeculationEffectiveness",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "systemStress",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "initializeAccountActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAccountExempt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastHealthUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maintainPegStability",
    outputs: [
      {
        internalType: "enum IEconomicEngine.StabilityAction",
        name: "action",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marketMetrics",
    outputs: [
      {
        internalType: "uint256",
        name: "totalDemurrageCollected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPenaltiesCollected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "averageHoldingPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "networkVelocity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "participationScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastMetricUpdate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monitorEconomicHealth",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "overallHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceStability",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "participationRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdate",
            type: "uint256",
          },
        ],
        internalType: "struct IEconomicEngine.HealthMetrics",
        name: "metrics",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "processTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalanceReserves",
    outputs: [
      {
        components: [
          {
            internalType: "enum IEconomicEngine.ReserveOperationType",
            name: "operationType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "targetChain",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
        ],
        internalType: "struct IEconomicEngine.ReserveOperation",
        name: "operation",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "activityType",
        type: "uint8",
      },
    ],
    name: "recordFiatActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "removeEmergencyOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "setAccountActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "exempt",
        type: "bool",
      },
    ],
    name: "setAccountExemption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stabilityPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "chainId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "baseDemurrageRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDemurrageRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stabilityThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fiatDiscountFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gracePeriodsHours",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interventionThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rebalanceFrequency",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "emergencyThreshold",
            type: "uint256",
          },
        ],
        internalType: "struct IEconomicEngine.EconomicParameters",
        name: "parameters",
        type: "tuple",
      },
    ],
    name: "synchronizeParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "systemHealth",
    outputs: [
      {
        internalType: "uint256",
        name: "priceStability",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidityHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "participationRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "baseDemurrageRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDemurrageRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stabilityThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fiatDiscountFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gracePeriodsHours",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interventionThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rebalanceFrequency",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "emergencyThreshold",
            type: "uint256",
          },
        ],
        internalType: "struct IEconomicEngine.EconomicParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "updateEconomicParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedBacking",
        type: "uint256",
      },
    ],
    name: "validateFiatBacking",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "actualBacking",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0346200028857601f6200220f38819003918201601f19168301916001600160401b039190828411858510176200028d578085926040958652833960809485918101031262000288576200005481620002a3565b906200006360208201620002a3565b906200007f606062000077878401620002a3565b9201620002a3565b6001600160a01b0393909290841680156200027057600080546001600160a01b03198116831782559095167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a360018055865260a05260c052825161010092838201828110828211176200025c579060e0929186526032825260c86020830152606486830152611388918260608201526030888201526101f4928360a0830152610e10918260c08201526103e89586910152603260035560c8600455606460055560065560306007558260085560095582600a55855160a081018181108382111762000248578752838152836020820152828782015283606082015287429101528260115582601255816013558260145542601555855193610120850191858310908311176200023457508552610384808452826020850152828685015281606085015282878501526102ee938460a0820152610352958660c0830152606460e0830152429101526016558160175581601855601955601a55601b55601c556064601d5542601e554260265551611f569182620002b983395181610e7e015260a05181610c0b015260c051816119790152f35b634e487b7160e01b81526041600452602490fd5b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b84526041600452602484fd5b8651631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620002885756fe6080604081815260048036101561001557600080fd5b60009260e08435811c918263048c661d14611965575081630905f5601461194057816309705de8146119015781630f86d806146117ed578163164af839146117bc5781631af94b7f1461177d5781631c7f0d531461173b57816321f36179146116d457816328a5ed481461168957816331a6be8c1461160757816335ae8586146115c657816335eebbcc146115a25781633b1e498c146115475781633f4ba83a146114dd5781634064f964146114c9578163445738c61461149f57816349961e331461136157816350e3e9831461090f57816352633bbf146112fc5781635c7277b514610a0a5781635c74105f1461120c5781635c975abb146111e757816364632bb5146111b257816364828ea71461115f57816366e63dcb14610ff957816368dbf24a14610fbc5781636d32998814610f9c578163715018a614610f425781638456cb5914610ed65781638da5cb5b14610ead578163907f4a0f14610e68578163919079bf14610df657816394becce914610d2a57816399b20eaf14610caf5781639b8a130e14610c3a578163a0796e4314610bf5578163b3e34a1b14610a69578163b4b460d014610a49578163b4bbd41b14610a0a578163b65811b214610914578163bbe741331461090f578163bc33b4ef146108f357848263c124a2471461080457508163c8e9653f14610421578163d75092da14610768578163db0226b41461062f578163db6cc5e1146105b7578163dda2b31d14610573578163deb906e7146104cf57508063e460112a14610426578063eb91d37e14610421578063ed249e99146103da578063f1d0b1a8146103025763f2fde38b1461027957600080fd5b346102fe5760203660031901126102fe576102926119a8565b9061029b611ef4565b6001600160a01b039182169283156102e857505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5090346102fe577fcdd52f85aca06892660c3bcd066cecf738c8b25c193d04bb6fa7cf01e2bdc8f9906109c460ff61033936611b8c565b9160018060a09693961b0390818a5416331480156103c6575b61035b90611bc0565b169687895260208052858920610372868254611c31565b8155426001820155600281016103888154611ec2565b905560038101600186198254161790550155858752601f6020528387208054156103bd575b508351928352166020820152a280f35b429055386103ad565b50338a526022602052868a20548516610352565b50503461041d57602036600319011261041d576103f56119a8565b6103fd611ef4565b6001600160a01b0316825260226020528120805460ff1916600117905580f35b5080fd5b611b69565b50503461041d578160031936011261041d5760c09160a0825161044881611ad6565b82815282602082015282848201528260608201528260808201520152805161046f81611ad6565b600b5491828252600c549060208301918252600d5490808401918252600e549160608501928352600f54936080860194855260a06010549601958652825196875251602087015251908501525160608401525160808301525160a0820152f35b9290503461056f57602036600319011261056f576101409381906001600160a01b036104f96119a8565b168152601f6020522090815493600183015493600284015490600385015490850154600586015491600687015493600788015496600960ff60088b0154169901549981519b8c5260208c01528a01526060890152608088015260a087015260c08601528401521515610100830152610120820152f35b8380fd5b5050503461041d57608036600319011261041d5761058f6119a8565b506024356001600160a01b0381160361041d5760643560ff81160361041d5751908152602090f35b5050503461041d578160031936011261041d5760a0916105d5611e59565b5081516105e181611a6a565b60028152602081019282845280820192835263ffffffff6080606084019342855201936001855242601555825195600287525160208701525116908401525160608301525115156080820152f35b505082346107655761064036611b8c565b509060018060a01b031690818352601f602052848320908482016106648154611ec2565b905560058201610675828254611c31565b905560068201938454801515908161074f575b501561073e576103209560648302928084046064149015171561072b575050849161271060079204945b4290550155816106ca575b5082519182526020820152f35b7f492ff5e65a32d371dc53694cdd914079c39c1a34abdcc783bb21b82f1eb69bde60808551848152866020820152601d878201527f48696768207269736b207472616e73616374696f6e207061747465726e0000006060820152a2836106bd565b634e487b7160e01b825260119052602490fd5b9194505060076064948592946106b2565b61012c915061075e9042611bfb565b1088610688565b80fd5b505090346102fe5760203660031901126102fe578060a0936107886119a8565b610790611e59565b50600180871b0316815260208052208151916107ab83611a6a565b815493848452600183015460208501908152608060028501549284870193845260ff6003870154169560608801961515875201549501948552825195865251602086015251908401525115156060830152516080820152f35b808585346108ef5760203660031901126108ef5767ffffffffffffffff9181358381116108eb57366023820112156108eb57808301359384116108eb5736602485830101116108eb5783602481927fa8bfc00a82dac609a5575e0d4bf2d4f2284be6d96c469bef935e1f8319277f4b97606096338252602260205260ff878320541680156108d8575b61089690611bc0565b600160ff19855416178455426025558160035555845196879533875280602088015286015201848401378181018301869052601f01601f19168101030190a180f35b5081546001600160a01b0316331461088d565b8480fd5b5050fd5b5050503461041d578160031936011261041d5751908152602090f35b6119d6565b8390853461076557806003193601126107655750610a0860a092610936611e59565b5042601e556103849283601655426026554260155581518481526017548060208301527ffbf3f962d373a45d6b9b64c3aac5e87a6820b09709c7b97f47a465b66ae6982f61012060185493848782015260195495866060830152601a546080830152601b548b830152601c5460c0830152601d549082015242610100820152a18351956109c287611a6a565b8652602086015282850152606084015242608084015251809260808091805184526020810151602085015260408101516040850152606081015160608501520151910152565bf35b5050503461041d57602036600319011261041d5760209160ff9082906001600160a01b03610a366119a8565b1681526021855220541690519015158152f35b5050503461041d578160031936011261041d576020906025549051908152f35b84929150346102fe57610100918260031936011261056f57610a89611ef4565b80359160243591828411610bb25761012c8311610b6f57606435906127108211610b2c5790837fbb3e2e63c6327a93bc0146eae83426868de86a9abbd3131b01417599413ad8189798928660035555604435908160055580600655608435908160075560a435928360085560c435948560095560e4359788600a558151998a5260208a01528801526060870152608086015260a085015260c0840152820152a180f35b606490602089519162461bcd60e51b8352820152601760248201527f496e76616c696420646973636f756e7420666163746f720000000000000000006044820152fd5b606490602088519162461bcd60e51b8352820152601760248201527f44656d757272616765207261746520746f6f20686967680000000000000000006044820152fd5b606490602088519162461bcd60e51b8352820152601760248201527f496e76616c69642064656d7572726167652072617465730000000000000000006044820152fd5b5050503461041d578160031936011261041d57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050503461041d57602036600319011261041d57806101809263ffffffff610c606119c3565b16815260236020522090610c7382611b0f565b916008810154600982015490610c95600b600a85015494015494518096611a1f565b610100850152610120840152610140830152610160820152f35b505090346102fe57826003193601126102fe57610cca611ef4565b6024549060ff821615610cf0575060ff19166024556025829055603260035560c8905580f35b5162461bcd60e51b815260208184015260156024820152744e6f7420696e20656d657267656e6379206d6f646560581b6044820152606490fd5b5050503461041d57602036600319011261041d57806101809263ffffffff610d506119c3565b8260808551610d5e81611a6a565b610d66611e84565b815282602082015282878201528260608201520152168152602360205220815190610d9082611a6a565b610d9981611b0f565b92838352600882015460208401908152610dd86009840154928086019384526080600b600a870154966060890197885201549601958652518096611a1f565b51610100850152516101208401525161014083015251610160820152f35b905083346107655780600319360112610765575061010092610a0891610e1a611e84565b50815193610e2785611af2565b6003548552546020850152600554828501526006546060850152600754608085015260085460a085015260095460c0850152600a5490840152518092611a1f565b5050503461041d578160031936011261041d57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050503461041d578160031936011261041d57905490516001600160a01b039091168152602090f35b5050346102fe57826003193601126102fe57610ef0611ef4565b6002549060ff8216610f34575060ff1916600117600255513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b825163d93c066560e01b8152fd5b8434610765578060031936011261076557610f5b611ef4565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050503461041d578160031936011261041d576020906026549051908152f35b5050503461041d57602036600319011261041d5760209160079082906001600160a01b03610fe86119a8565b168152601f85522001549051908152f35b505090346102fe57806003193601126102fe576110146119a8565b9261101d611ed1565b80546001600160a01b0390811633148015611156575b61103c90611bc0565b82519463164af83960e01b86521690818486015260243560248601526020948581604481305afa94851561114c5782956110ed575b50508284611087575b5050506001805551908152f35b818360029352601f875220426001820155016110a4848254611c31565b90556110b283600b54611c31565b600b557fb33f78cd1b1bab899b74b4cf3f2454c98454dfefa5a9747caf499c7d5f8e36068260035481519086825287820152a238808261107a565b9091945085903d8711611144575b601f8201601f191683019067ffffffffffffffff82118483101761113157508691839186528101031261056f5751923880611071565b634e487b7160e01b875260419052602486fd5b3d91506110fb565b84513d84823e3d90fd5b50333014611033565b5050503461041d578060031936011261041d5761117a6119a8565b906024359182151580930361056f57611191611ef4565b60018060a01b03168352602160205282209060ff8019835416911617905580f35b5050503461041d578060031936011261041d576001600160a01b036111d56119a8565b168252601f6020526024359082205580f35b5050503461041d578160031936011261041d5760209060ff6002541690519015158152f35b915050346102fe57826003193601126102fe57916101209282519161123083611ab9565b80835280602084015280848401528060608401528060808401528060a08401528060c084015280828401526101008093015282519061126e82611ab9565b6016549384835260175490602084019182526018549080850191825260195460608601908152601a549060808701918252601b549260a08801938452601c549460c08901958652601d5496888a019788528a601e549a01998a5282519b8c525160208c015251908a01525160608901525160808801525160a08701525160c086015251908401525190820152f35b915050346102fe57826003193601126102fe5761012092506016549160175491601854601954601a54601b5491601c5493601d5496601e549881519a8b5260208b01528901526060880152608087015260a086015260c0850152830152610100820152f35b838584923461041d57602036600319011261041d57610140936113826119a8565b908480519461139086611a9c565b80865280602087015280828701528060608701528060808701528060a08701528060c08701528085870152610100938185880152816101208098015260018060a01b03168152601f602052209285519384926113eb84611a9c565b81549081855260018301549860208601998a5260028401549181870192835260038501549060608801918252850154916080880192835260058601549360a0890194855260068701549560c08a019687528c600960078a0154998b8d019a8b528d60ff6008830154169d019c15158d5201549c019b8c52602083519e8f9283525191015251908c01525160608b01525160808a01525160a08901525160c08801525190860152511515908401525190820152f35b5050503461041d57602036600319011261041d576020906114be6119a8565b506003549051908152f35b843461076557806003193601126107655780f35b5050346102fe57826003193601126102fe576114f7611ef4565b6002549060ff821615611539575060ff1916600255513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b849391503461056f578360031936011261056f576101009350600354925491600554600654600754906008549260095494600a54978151998a5260208a01528801526060870152608086015260a085015260c0840152820152f35b50508234610765576020366003190112610765575081519060018252356020820152f35b5050503461041d57602036600319011261041d576115e26119a8565b6115ea611ef4565b6001600160a01b0316825260226020528120805460ff1916905580f35b5050503461041d578160031936011261041d5760a090611625611e59565b50610a0881519161163583611a6a565b60115483526012546020840152601354818401526014546060840152601554608084015251809260808091805184526020810151602085015260408101516040850152606081015160608501520151910152565b5050503461041d578160031936011261041d5760c090600b5490600c5490600d54600e5490600f549260105494815196875260208701528501526060840152608083015260a0820152f35b505090346102fe5760203660031901126102fe5760a09281906001600160a01b036116fd6119a8565b168152602080522080549260018201549260028301549160ff6003850154169301549381519586526020860152840152151560608301526080820152f35b5050503461041d578160031936011261041d5760a090601154906012549060135460145491601554938151958652602086015284015260608301526080820152f35b5050503461041d578060031936011261041d576020906117af61179e6119a8565b6117a6611ed1565b60243590611d8e565b9060018055519015158152f35b5050503461041d578060031936011261041d576020906117e66117dd6119a8565b60243590611c3e565b9051908152f35b849391503461056f5761012036600319011261056f5761180b6119c3565b61010092836023193601126118fd577fa177a0974448a9d0b9c9756937dee290b6b45f34f227424cbd493dea5405bf3c9360209363ffffffff600b9461185b60018060a01b038b54163314611bc0565b169687895260238652838920926024359283855560443592836001870155606435918260028801556084359182600389015560a435809189015560c435908160058a015560e435938460068b015561010435958660078c015542600a8c01558b51988e8a019a8b528c8a01526060890152608088015260a087015260c08601528401528183015281526118ed81611ab9565b519020928391015551908152a280f35b8580fd5b5050503461041d57602036600319011261041d5760209160ff9082906001600160a01b0361192d6119a8565b1681526022855220541690519015158152f35b5050503461041d578160031936011261041d5760209060ff6024541690519015158152f35b85903461041d578160031936011261041d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600435906001600160a01b03821682036119be57565b600080fd5b6004359063ffffffff821682036119be57565b346119be5760203660031901126119be576001600160a01b036119f76119a8565b16600052601f60205260406000204281556008810160ff198154169055600942910155600080f35b60e08091805184526020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c08501520151910152565b60a0810190811067ffffffffffffffff821117611a8657604052565b634e487b7160e01b600052604160045260246000fd5b610140810190811067ffffffffffffffff821117611a8657604052565b610120810190811067ffffffffffffffff821117611a8657604052565b60c0810190811067ffffffffffffffff821117611a8657604052565b610100810190811067ffffffffffffffff821117611a8657604052565b90604051611b1c81611af2565b60e0600782948054845260018101546020850152600281015460408501526003810154606085015260048101546080850152600581015460a0850152600681015460c08501520154910152565b346119be5760003660031901126119be576020604051670de0b6b3a76400008152f35b60609060031901126119be576004356001600160a01b03811681036119be57906024359060443560ff811681036119be5790565b15611bc757565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b91908203918211611c0857565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715611c0857565b91908201809211611c0857565b6001600160a01b031660009081526021602052604081205460ff168015611d86575b611d8157601f60205260408120604051611c7981611a9c565b610120600983549384845260018101546020850152600281015460408501526003810154606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e085015260ff600882015416151561010085015201549101528015611d24575b611cf09042611bfb565b610e1091828210611d1d575091611d14611d1992620186a094049160035490611c1e565b611c1e565b0490565b9250505090565b50601554611d328142611bfb565b9060075491610e1092838102938185041490151715611d6d57821015611d6657611cf091611d5f91611c31565b9050611ce6565b5050905090565b634e487b7160e01b84526011600452602484fd5b905090565b508115611c60565b6000546001600160a01b039190821633148015611e50575b611daf90611bc0565b82611dbc57505050600090565b7f492ff5e65a32d371dc53694cdd914079c39c1a34abdcc783bb21b82f1eb69bde91608091169283600052601f6020526003604060002001611dff828254611c31565b9055611e0d81600c54611c31565b600c5560405190815260406020820152601b60408201527f4170706c6965642073706563756c6174696f6e2070656e616c747900000000006060820152a2600190565b50333014611da6565b60405190611e6682611a6a565b60006080838281528260208201528260408201528260608201520152565b60405190611e9182611af2565b8160e06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b6000198114611c085760010190565b600260015414611ee2576002600155565b604051633ee5aeb560e01b8152600490fd5b6000546001600160a01b03163303611f0857565b60405163118cdaa760e01b8152336004820152602490fdfea2646970667358221220543e246120db2005ea99b4f9102f1b969f308172a006a1fb75564379907f830564736f6c63430008160033";

type SimpleEconomicEngineConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleEconomicEngineConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleEconomicEngine__factory extends ContractFactory {
  constructor(...args: SimpleEconomicEngineConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: string,
    _demurrageManager: string,
    _antiSpeculationEngine: string,
    _stabilityPool: string,
    overrides?: Overrides & { from?: string }
  ): Promise<SimpleEconomicEngine> {
    return super.deploy(
      _owner,
      _demurrageManager,
      _antiSpeculationEngine,
      _stabilityPool,
      overrides || {}
    ) as Promise<SimpleEconomicEngine>;
  }
  override getDeployTransaction(
    _owner: string,
    _demurrageManager: string,
    _antiSpeculationEngine: string,
    _stabilityPool: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _demurrageManager,
      _antiSpeculationEngine,
      _stabilityPool,
      overrides || {}
    );
  }
  override attach(address: string): SimpleEconomicEngine {
    return super.attach(address) as SimpleEconomicEngine;
  }
  override connect(signer: Signer): SimpleEconomicEngine__factory {
    return super.connect(signer) as SimpleEconomicEngine__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleEconomicEngineInterface {
    return new utils.Interface(_abi) as SimpleEconomicEngineInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleEconomicEngine {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleEconomicEngine;
  }
}
