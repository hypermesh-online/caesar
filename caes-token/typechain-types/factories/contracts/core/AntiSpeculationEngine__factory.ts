/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AntiSpeculationEngine,
  AntiSpeculationEngineInterface,
} from "../../../contracts/core/AntiSpeculationEngine";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "AccountFlagged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccountUnflagged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ConfigurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "penalty",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "SpeculationPenaltyApplied",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "whitelisted",
        type: "bool",
      },
    ],
    name: "WhitelistUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountHistory",
    outputs: [
      {
        internalType: "uint256",
        name: "lastTransactionTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalVolume",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "averageHoldingPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rapidTradeCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "flaggedForSpeculation",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "transactionType",
        type: "uint8",
      },
    ],
    name: "analyzeTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "penalty",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "averageNetworkHoldingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "calculateSpeculationPenalty",
    outputs: [
      {
        internalType: "uint256",
        name: "penalty",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "uint256",
        name: "maxHoldingPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "penaltyRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rapidTradePenalty",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minTransactionGap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountHistory",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lastTransactionTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "transactionCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalVolume",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageHoldingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rapidTradeCount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "flaggedForSpeculation",
            type: "bool",
          },
        ],
        internalType: "struct AntiSpeculationEngine.TransactionHistory",
        name: "history",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAntiSpeculationConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxHoldingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "penaltyRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rapidTradePenalty",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTransactionGap",
            type: "uint256",
          },
        ],
        internalType: "struct ICaesar.AntiSpeculationConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPenaltiesCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "holdingPeriods",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAccountFlagged",
    outputs: [
      {
        internalType: "bool",
        name: "flagged",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseAntiSpeculation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxHoldingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "penaltyRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rapidTradePenalty",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTransactionGap",
            type: "uint256",
          },
        ],
        internalType: "struct ICaesar.AntiSpeculationConfig",
        name: "newConfig",
        type: "tuple",
      },
    ],
    name: "setAntiSpeculationConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "whitelisted",
        type: "bool",
      },
    ],
    name: "setWhitelistStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "speculationThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPenaltiesCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "unflagAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "transactionVolume",
        type: "uint256",
      },
    ],
    name: "updateParticipationScore",
    outputs: [
      {
        internalType: "uint256",
        name: "newScore",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034610121576001600160401b0390601f61127738819003918201601f191683019291908484118385101761012657816020928492604096875283398101031261012157516001600160a01b0392908381169081900361012157801561010957600080546001600160a01b03198116831782559094167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a3600180556003600b5581519060808201908111828210176100f55790606091835262278d009081815260c86020820152606484820152610e10928391015260025560c860035560646004556005555161113a908161013d8239f35b634e487b7160e01b84526041600452602484fd5b8251631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816302a17b56146107f757508063031ce306146107d857806306c933d81461079a5780630c4242841461071857806321b57933146106a65780632988db521461067d578381632c27245614610610578163359a247f146105e757508063715018a61461058d57806379502c55146105565780637a05c6cf146104865780637eaacdb0146102535780638da5cb5b1461045e5780638e7411f414610424578063ac7fc7f0146102a2578063bb1345c914610272578063c880fad714610253578063d181a021146101fa578063d5cd1614146101db578063e1b82534146101955763f2fde38b1461010c57600080fd5b3461019157602036600319011261019157610125610872565b9061012e610f8c565b6001600160a01b0391821692831561017b57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101d75760203660031901126101d75760209160ff9060059083906001600160a01b036101c3610872565b168152600686522001541690519015158152f35b5080fd5b5050346101d757816003193601126101d757602090600b549051908152f35b5050346101d757806003193601126101d757610214610872565b6001600160a01b0316825260076020528082208054602435939084101561025057506020926102429161088d565b91905490519160031b1c8152f35b80fd5b5050346101d757816003193601126101d7576020906009549051908152f35b5050346101d757806003193601126101d75760209061029b610292610872565b60243590610dbe565b9051908152f35b5034610191576080366003190112610191576102bc610f8c565b602435906103e882116103e957604435916101f483116103a6576064359361012c8510610364578235906201518082106103225750600255600355556005557f473e40f4014586c0a714bb17cd8b8a5eff4195d8fcfa8dfb699e96264e43515f8180a180f35b5162461bcd60e51b8152602081850152601860248201527f486f6c64696e6720706572696f6420746f6f2073686f727400000000000000006044820152606490fd5b5162461bcd60e51b8152602081840152601960248201527f5472616e73616374696f6e2067617020746f6f2073686f7274000000000000006044820152606490fd5b835162461bcd60e51b8152602081840152601c60248201527f52617069642074726164652070656e616c747920746f6f2068696768000000006044820152606490fd5b606490602084519162461bcd60e51b835282015260156024820152740a0cadcc2d8e8f240e4c2e8ca40e8dede40d0d2ced605b1b6044820152fd5b5050346101d75760603660031901126101d75761043f610872565b6044359260ff84168403610250575060209261029b9160243590610a54565b5050346101d757816003193601126101d757905490516001600160a01b039091168152602090f35b5034610191576020366003190112610191578160c0936104a4610872565b8160a084516104b2816108ed565b8281528260208201528286820152826060820152826080820152015260018060a01b031681526006602052208251916104ea836108ed565b81549384845260018301546020850190815260028401549082860191825260a060ff600560038801549660608a019788528801549760808a01988952015416960195151586528251968752516020870152519085015251606084015251608083015251151560a0820152f35b5034610191578260031936011261019157608092506002549160035491549060055492815194855260208501528301526060820152f35b83346102505780600319360112610250576105a6610f8c565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80833461060d578160031936011261060d57610601610f8c565b81600355558060055580f35b50fd5b919050346101d75760203660031901126101d75761062c610872565b610634610f8c565b6001600160a01b0316808352600660205292822060058101805460ff1916905501557fcff4acea33dd64305f2312e4c3ab1eb07c587bc71c924b609c4aac3c60cb981a8280a280f35b5050346101d757806003193601126101d75760209061029b61069d610872565b60243590610939565b5090346101915760203660031901126101915760c09281906001600160a01b036106ce610872565b16815260066020522080549260018201549260028301549060ff600560038601549486015495015416948151968752602087015285015260608401526080830152151560a0820152f35b5050346101d757806003193601126101d757610732610872565b60243590811515809203610796577ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d9160209161076d610f8c565b6001600160a01b031680865260088352848620805460ff191660ff84161790559351908152a280f35b8380fd5b5050346101d75760203660031901126101d75760209160ff9082906001600160a01b036107c5610872565b1681526008855220541690519015158152f35b5050346101d757816003193601126101d757602090600a549051908152f35b84939150346107965783600319360112610796579260608461081a6080966108bb565b82815282602082015282848201520152805190610836826108bb565b60025492838352600354906020840191825254908284019182526060600554940193845282519485525160208501525190830152516060820152f35b600435906001600160a01b038216820361088857565b600080fd5b80548210156108a55760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6080810190811067ffffffffffffffff8211176108d757604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff8211176108d757604052565b9190820391821161091657565b634e487b7160e01b600052601160045260246000fd5b9190820180921161091657565b6001600160a01b031660009081526008602052604081205490919060ff16610a0357600660205260406000206109b960405191610975836108ed565b60a060ff6005835493848752600181015460208801526002810154604088015260038101546060880152600481015460808801520154169301921515835242610909565b600554116109e9575b516109cb575090565b906127106109df6109e69360035490610dab565b049061092c565b90565b916109fd906127106109df60045485610dab565b916109c2565b5050600090565b15610a1157565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b60001981146109165760010190565b9060009260009260018060a01b03908185541633148015610da2575b610a7990610a0a565b16908184526020926008845260409160ff8387205416610d985760068552828620958654610aa78142610909565b9260018901610ab68154610a45565b905560028901610ac786825461092c565b9055600554841080610d8f575b610d05575b60ff166002149081610cfb575b50610c21575b50506004850154600b541115610ba4575b60ff600586015416610b23575b50505050429055610b1d8160095461092c565b60095590565b94601782608093610b68612710610b607f492ff5e65a32d371dc53694cdd914079c39c1a34abdcc783bb21b82f1eb69bde98999b60035490610dab565b04809561092c565b9881519485528401528201527f466c6167676564206163636f756e742070656e616c74790000000000000000006060820152a238808080610b0a565b60058501805460ff811615610bbb575b5050610afd565b60019060ff1916179055827f4368ed9f2172998033159d787a8ed9a00ce0e12d528fdd7a205c31444e246cbb606084518781526017888201527f4578636573736976652072617069642074726164696e6700000000000000000086820152a23880610bb4565b8481526007865283812080549168010000000000000000831015610ce7575081610c5291600188959401815561088d565b81549060031b9083821b91600019901b1916179055600254811115610aec576080610ca8610ca17f492ff5e65a32d371dc53694cdd914079c39c1a34abdcc783bb21b82f1eb69bde9386610fb8565b809a61092c565b98855190815285888201526018868201527f45786365737369766520686f6c64696e6720706572696f6400000000000000006060820152a28238610aec565b634e487b7160e01b81526041600452602490fd5b9050151538610ae6565b98600489018054610d1590610a45565b9055600454610d249086610dab565b6127109004610d329161092c565b988686518b8152878a82015287810160169052606081017514985c1a59081d1c98591a5b99c819195d1958dd195960521b905260807f492ff5e65a32d371dc53694cdd914079c39c1a34abdcc783bb21b82f1eb69bde91a2610ad9565b50811515610ad4565b5050505050905090565b50333014610a70565b8181029291811591840414171561091657565b60008054919290916001600160a01b0390811633148015610f83575b610de390610a0a565b83168252600860205260ff604083205416610f7a576006602052604082209260405190610e0f826108ed565b84548252600185015460208301908152600286015492604081019384526003870154606082015260a060ff600560048a0154998a608086015201541615159101526101f49580158015610f18575b5050600a90511015610ec1575b505160011c10610e89575b506103e8808211610e84575090565b905090565b6096821115610eba576095198201918211610ea657505b38610e75565b634e487b7160e01b81526011600452602490fd5b9050610ea0565b610eca90611021565b620151808110159081610f0a575b50610ee4575b38610e6a565b9260c88101809111610ef65792610ede565b634e487b7160e01b83526011600452602483fd5b62093a809150111538610ed8565b606482989398029182046064141715610f665780821115610f5c578103908111610f4857600a905b959038610e5d565b634e487b7160e01b85526011600452602485fd5b5050600a84610f40565b634e487b7160e01b86526011600452602486fd5b5050506103e890565b50333014610dda565b6000546001600160a01b03163303610fa057565b60405163118cdaa760e01b8152336004820152602490fd5b906002549081811115611019576201518091610fd391610909565b0460035491600a820291808304600a149015171561091657610ffb61100d926127109461092c565b906103e8808311611011575b50610dab565b0490565b915038611007565b505050600090565b60009060018060a01b0316815260209160076020526040822060405190816020825491828152019185526020852090855b878282106110f05750505050819003601f01601f1916810167ffffffffffffffff8111828210176110dc576040528051156110d6578291825b82518410156110b1576110a9600191878660051b860101519061092c565b93019261108b565b92509350519182156110c257500490565b634e487b7160e01b81526012600452602490fd5b50915090565b634e487b7160e01b84526041600452602484fd5b83548552909301926001928301920161105256fea26469706673582212209e24b8e4520d54c8f784d67faa5ad1f087895014451f2ceeed9dfbeeb5693d7664736f6c63430008160033";

type AntiSpeculationEngineConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AntiSpeculationEngineConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AntiSpeculationEngine__factory extends ContractFactory {
  constructor(...args: AntiSpeculationEngineConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<AntiSpeculationEngine> {
    return super.deploy(
      initialOwner,
      overrides || {}
    ) as Promise<AntiSpeculationEngine>;
  }
  override getDeployTransaction(
    initialOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override attach(address: string): AntiSpeculationEngine {
    return super.attach(address) as AntiSpeculationEngine;
  }
  override connect(signer: Signer): AntiSpeculationEngine__factory {
    return super.connect(signer) as AntiSpeculationEngine__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AntiSpeculationEngineInterface {
    return new utils.Interface(_abi) as AntiSpeculationEngineInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AntiSpeculationEngine {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AntiSpeculationEngine;
  }
}
