/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DemurrageManager,
  DemurrageManagerInterface,
} from "../../../contracts/core/DemurrageManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_goldOracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "exempt",
        type: "bool",
      },
    ],
    name: "AccountExemptionSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DemurrageApplied",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "baseRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decayInterval",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stabilityThreshold",
        type: "uint256",
      },
    ],
    name: "DemurrageConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "StabilityIndexUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastActivity",
        type: "uint256",
      },
    ],
    name: "applyDemurrage",
    outputs: [
      {
        internalType: "uint256",
        name: "appliedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastActivity",
        type: "uint256",
      },
    ],
    name: "calculateDemurrage",
    outputs: [
      {
        internalType: "uint256",
        name: "demurrageAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "uint256",
        name: "baseRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decayInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stabilityThreshold",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentStabilityIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "exemptAccounts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentDecayRate",
    outputs: [
      {
        internalType: "uint256",
        name: "effectiveRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDemurrageConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "baseRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stabilityThreshold",
            type: "uint256",
          },
        ],
        internalType: "struct ICaesar.DemurrageConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalDemurrageCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "goldEconomicData",
    outputs: [
      {
        internalType: "uint256",
        name: "lastGoldUpdate",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "lastDeviationScore",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "adaptiveRateMultiplier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "convergenceTarget",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "emergencyMode",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "goldOracle",
    outputs: [
      {
        internalType: "contract GoldPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isStabilityConditionMet",
    outputs: [
      {
        internalType: "bool",
        name: "isStable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastDemurrageApplication",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPriceUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseDemurrage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "exempt",
        type: "bool",
      },
    ],
    name: "setAccountExemption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "baseRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decayInterval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stabilityThreshold",
            type: "uint256",
          },
        ],
        internalType: "struct ICaesar.DemurrageConfig",
        name: "newConfig",
        type: "tuple",
      },
    ],
    name: "setDemurrageConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDemurrageCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "activeParticipants",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalHolders",
        type: "uint256",
      },
    ],
    name: "updateStabilityIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461019857610eac906001600160401b0390601f38849003908101601f19168201908382118383101761019d5780839160409687948552833981010312610198576100576020610050836101b3565b92016101b3565b6001600160a01b039182169190821561018057600080546001600160a01b031981168517825590939083167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a360018055166080528251608081018181108482111761016c57845260018152600a6020820152606460606201518092838782015201526001600355600a600455600555606460065582519160a0830190838210908211176101585783524282528060208301526103e8908184840152806080680657b3801b80b4000094856060820152015242600c55600d55600e55600f5560ff196010541660105551610ce490816101c88239608051816102d80152f35b634e487b7160e01b82526041600452602482fd5b634e487b7160e01b83526041600452602483fd5b8451631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101985756fe608060408181526004918236101561001657600080fd5b600092833560e01c9182631883fc6414610764575081631c3d4e661461074857838263319417b0146107235750816333287455146106ff5781633b6e4deb146105ac5781633c7fe601146105325781634593ec91146104ec5781635c7277b5146104ae5781635c975abb1461048a57816364828ea7146104085781636949faeb146103e9578163715018a61461038f57816379502c551461034e578163862ed32c1461032f5781638da5cb5b1461030757816397a3b4de146102c3578163a66eb7f91461028b578163b358791914610267578163bfd3bf1614610248578163c02c646c146101c5578163f2fde38b1461013a575063f3f101a01461011957600080fd5b346101365781600319360112610136576020906009549051908152f35b5080fd5b9050346101c15760203660031901126101c1576101556108c7565b9061015e610b2e565b6001600160a01b039182169283156101ab57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b9050346101c15760603660031901126101c1577f5cd02f78f0833cb328c026d0df89a477e9a0f4a1c1117b5ca51f38619d976cf69161022e60209260018060a01b038654163314801561023f575b61021c9061090c565b6044359060243590600f549035610b5a565b9081600a5542600b5551908152a180f35b50333014610213565b5050346101365781600319360112610136576020906009549051908152f35b505034610136578160031936011261013657602090600a5460065411159051908152f35b5050346101365760203660031901126101365760209181906001600160a01b036102b36108c7565b1681526007845220549051908152f35b505034610136578160031936011261013657517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610136578160031936011261013657905490516001600160a01b039091168152602090f35b505034610136578160031936011261013657602090600a549051908152f35b9050823461038c578060031936011261038c575060035490546005546006549351928352602083019190915260408201526060810191909152608090f35b80fd5b833461038c578060031936011261038c576103a8610b2e565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b505034610136578160031936011261013657602090600b549051908152f35b5050346101365780600319360112610136576104226108c7565b60243590811515809203610486577f2cb042a6fe2826f524b9fd3945286d28498ecd3d65358a6f60c854af11d54a079160209161045d610b2e565b6001600160a01b031680865260088352848620805460ff191660ff84161790559351908152a280f35b8380fd5b50503461013657816003193601126101365760209060ff6002541690519015158152f35b5050346101365760203660031901126101365760209160ff9082906001600160a01b036104d96108c7565b1681526008855220541690519015158152f35b50503461013657816003193601126101365760a090600c5490600d5490600e54600f549160ff601054169381519586526020860152840152606083015215156080820152f35b919050346101c157826003193601126101c1576080926060825161055581610947565b8281528260208201528284820152015280519061057182610947565b600354928383525460208301908152600554908284019182526060600654940193845282519485525160208501525190830152516060820152f35b83915034610136576080366003190112610136576105c8610b2e565b8035602435918282116106bc576103e8831161068557604435908115610649579461064391847fae3ddb91bdcbafb376b48cfd483a13b380123eda56bb72ff440fd3cc9be4ca2a9697856003555580600555606435918260065551948594859094939260609260808301968352602083015260408201520152565b0390a180f35b606490602087519162461bcd60e51b83528201526016602482015275125b9d985b1a5908191958d85e481a5b9d195c9d985b60521b6044820152fd5b606490602086519162461bcd60e51b8352820152601160248201527009ac2f040e4c2e8ca40e8dede40d0d2ced607b1b6044820152fd5b606490602086519162461bcd60e51b8352820152601a60248201527f496e76616c6964207261746520636f6e66696775726174696f6e0000000000006044820152fd5b50503461013657816003193601126101365760209061071c610a7b565b9051908152f35b80913461074557816003193601126107455761073d610b2e565b816003555580f35b50fd5b5050346101365760209061071c61075e366108e2565b916109c9565b9083853461038c57610775366108e2565b909291956002600154146108b95750600260015530331480156108a6575b61079c9061090c565b8351630e1ea73360e11b81526001600160a01b03909616858701819052602487019390935260448601526020948581606481305afa94851561089c57829561083d575b5050836107f3575b50506001805551908152f35b81815260078552824291205561080b83600954610979565b6009557f92dbe9af03191016deca349de5f6439fc2d722818b96f7b02948d780a913e8e5848351858152a283806107e7565b9091945085903d8711610894575b601f8201601f191683019067ffffffffffffffff82118483101761088157508691839186528101031261048657519285806107df565b634e487b7160e01b875260419052602486fd5b3d915061084b565b84513d84823e3d90fd5b5081546001600160a01b03163314610793565b633ee5aeb560e01b81528590fd5b600435906001600160a01b03821682036108dd57565b600080fd5b60609060031901126108dd576004356001600160a01b03811681036108dd57906024359060443590565b1561091357565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b6080810190811067ffffffffffffffff82111761096357604052565b634e487b7160e01b600052604160045260246000fd5b9190820180921161098657565b634e487b7160e01b600052601160045260246000fd5b9190820391821161098657565b81156109b3570490565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b03166000908152600860205260408120549192909160ff168015610a60575b610a5a576109fd904261099c565b6005548110610a5a57610e10610a11610a7b565b9104908115610a535790610a259184610ac5565b9082821015610a4d5750610a39908261099c565b9060011c808211610a48575090565b905090565b91505090565b5050905090565b50905090565b5082156109ef565b8181029291811591840414171561098657565b600a546103e89081811015610aba57810381811161098657610ab791610ab060045492610aab600354809561099c565b610a68565b0490610979565b90565b5050600a6003540490565b9182158015610b26575b8015610b1e575b610b1957610ae391610a68565b670de0b6b3a7640000918282029180830484149015171561098657610b0f620f4240610b159304610bc4565b90610a68565b0490565b505090565b508015610ad6565b508115610acf565b6000546001600160a01b03163303610b4257565b60405163118cdaa760e01b8152336004820152602490fd5b90918215610bbb57610b76670de0b6b3a7640000948592610a68565b049166038d7ea4c68000830180931161098657610b9291610a68565b82810292818404149015171561098657610bab916109a9565b6103e89081811115610a48575090565b50505050600090565b8015610ca1576801158e460913d000008111610c9b57670de0b6b3a764000090816001916001925b6032841115610bfd575b5050505090565b610c1e82610c1886670de0b6b3a76400009498969798610a68565b95610a68565b0491610c2a84846109a9565b64e8d4a510008110610c9457600186811603610c855760009181811115610c7e57610c55925061099c565b935b6000198114610c695760010192610bec565b60246000634e487b7160e01b81526011600452fd5b5050610c55565b610c8e91610979565b93610c57565b5093610bf6565b50600090565b50670de0b6b3a76400009056fea264697066735822122091be4ac78533e93054b8d54654bc79510533f37e3e4a0cc2dbbb05e45df2e0ec64736f6c63430008160033";

type DemurrageManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemurrageManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DemurrageManager__factory extends ContractFactory {
  constructor(...args: DemurrageManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialOwner: string,
    _goldOracle: string,
    overrides?: Overrides & { from?: string }
  ): Promise<DemurrageManager> {
    return super.deploy(
      initialOwner,
      _goldOracle,
      overrides || {}
    ) as Promise<DemurrageManager>;
  }
  override getDeployTransaction(
    initialOwner: string,
    _goldOracle: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialOwner,
      _goldOracle,
      overrides || {}
    );
  }
  override attach(address: string): DemurrageManager {
    return super.attach(address) as DemurrageManager;
  }
  override connect(signer: Signer): DemurrageManager__factory {
    return super.connect(signer) as DemurrageManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemurrageManagerInterface {
    return new utils.Interface(_abi) as DemurrageManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DemurrageManager {
    return new Contract(address, _abi, signerOrProvider) as DemurrageManager;
  }
}
