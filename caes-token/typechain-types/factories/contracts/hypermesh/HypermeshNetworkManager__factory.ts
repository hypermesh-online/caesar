/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HypermeshNetworkManager,
  HypermeshNetworkManagerInterface,
} from "../../../contracts/hypermesh/HypermeshNetworkManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "EmergencyModeActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "hopIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "proof",
        type: "bytes32",
      },
    ],
    name: "HopCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "NodeDeactivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "deviceFingerprint",
        type: "bytes32",
      },
    ],
    name: "NodeRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "RewardDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "shardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "assignedNodes",
        type: "address[]",
      },
    ],
    name: "ShardCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "shardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "newNodes",
        type: "address[]",
      },
    ],
    name: "ShardRebalanced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalTime",
        type: "uint256",
      },
    ],
    name: "ValidationCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "hopPath",
        type: "address[]",
      },
    ],
    name: "ValidationStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "activateEmergencyMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "activeNodes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activeShardCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseRewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "crossChainBonusRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deactivateEmergencyMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNetworkHealth",
    outputs: [
      {
        internalType: "uint256",
        name: "activeNodeCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avgSuccessRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avgLatency",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalValidations",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "emergencyModeStatus",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "getNodeMetrics",
    outputs: [
      {
        internalType: "uint256",
        name: "successRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avgLatency",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reputationScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalRouted",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hostRewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "networkConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "minHops",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optimalHops",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxHops",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shardCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hopTimeoutMs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "consensusThreshold",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "emergencyMode",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nodes",
    outputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "deviceFingerprint",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "successRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avgLatency",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reputationScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalRouted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastActivity",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isBlacklisted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pendingValidations",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "performanceBonusMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "deviceFingerprint",
        type: "bytes32",
      },
    ],
    name: "registerNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "shards",
    outputs: [
      {
        internalType: "uint256",
        name: "shardId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "loadFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avgLatency",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "originChain",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetChain",
        type: "address",
      },
    ],
    name: "startHopValidation",
    outputs: [
      {
        internalType: "address[]",
        name: "hopPath",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "hopIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "proof",
        type: "bytes32",
      },
    ],
    name: "submitHopProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalNodes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minHops",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optimalHops",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxHops",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shardCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "hopTimeoutMs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "consensusThreshold",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "emergencyMode",
            type: "bool",
          },
        ],
        internalType: "struct HypermeshNetworkManager.NetworkConfig",
        name: "newConfig",
        type: "tuple",
      },
    ],
    name: "updateNetworkConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "validations",
    outputs: [
      {
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "totalHops",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "enum HypermeshNetworkManager.ValidationStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "originChain",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetChain",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608034620002db57601f62001e2438819003918201601f19168301916001600160401b038311848410176200029c57808492602094604052833981010312620002db57516001600160a01b03811690819003620002db578015620002c257600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180556103e86011556107d060128190556102bc6013556101f46014556040519060e082016001600160401b038111838210176200029c576040526003825260056020830152600a604083015260036060830152806080830152600060c061029e938460a08201520152600380556005600455600a600555600360065560075560085560ff1960095416600955600360105560005b600654811015620002b257604051906001600160401b0360208301908111908311176200029c5760208201604090815260008352516001600160401b0360c08201908111908211176200029c5760c0810160405281815260208101928352600060408201526000606082015260006080820152600160a082015281600052600c602052604060002092815184555192835160018060401b0381116200029c576801000000000000000081116200029c576001948583015482878501558083106200026e575b50602001858301600052602060002060005b838110620002535750505050600560a09160408401516002820155606084015160038201556080840151600482015501910151151560ff801983541691161790550162000134565b87906020828060a01b0385511694019381840155016200020b565b8684016000526020600020908382015b818301811062000290575050620001f9565b6000815588016200027e565b634e487b7160e01b600052604160045260246000fd5b604051611b439081620002e18239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b60003560e01c9081631189a4b0146112f35750806316faae9014611286578063189a5a17146111e95780632135a8721461116b5780633b064c311461110e5780635c975abb146110eb578063715018a6146110925780637651f56e1461105b5780638da5cb5b146110325780638f57ceaa1461101057806390ced42114610fba5780639592d42414610f9c57806396f9d98314610f5a5780639871d38f14610e1057806399b20eaf14610d9e5780639b98a02e14610d80578063a5bee12e14610a67578063afbf344014610a49578063b3f8037a14610a2b578063c124a24714610941578063e28c3802146108c8578063e5d4066b146101de578063f266f9f3146101c05763f2fde38b14610132573861000f565b346101bb5760203660031901126101bb5761014b61130e565b610153611aaf565b6001600160a01b039081169081156101a257600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b346101bb5760003660031901126101bb576020601254604051908152f35b346101bb5760603660031901126101bb576024356001600160a01b03811681036101bb57604435906001600160a01b03821682036101bb576002600154146108b657600260015561022d611adb565b6004351561087857600435600052600b60205260406000205461083357600d549160035483106107ee57600454928381106107a95761026b84611a61565b936102796040519586611a3f565b80855261028581611a61565b601f190136602087013761029882611a61565b6102a56040519182611a3f565b828152601f196102b484611a61565b013660208301376040514260208201524460408201523360601b60608201526054815280608081011067ffffffffffffffff6080830111176105d85760808101604052805160209091012091926000925b8484106106765787878782519161031b83611a61565b926103296040519485611a3f565b808452610338601f1991611a61565b01366020850137835161034a81611a61565b906103586040519283611a3f565b808252610367601f1991611a61565b013660208301378451906040519461037e86611a22565b60043586528660208701526040860152606085015260808401524260a0840152600060c084015260018060a01b031660e083015260018060a01b0316610100820152600435600052600b602052604060002081518155602082015180519067ffffffffffffffff82116105d857600160401b82116105d8576001830180548382556020929161040e918591611a79565b0160018301600052602060002060005b8381106106595750505050604082015180519067ffffffffffffffff82116105d857600160401b82116105d85760028301805483825560209291610463918591611a79565b0160028301600052602060002060005b8381106106455750505050606082015180519067ffffffffffffffff82116105d857600160401b82116105d8576003830154826003850155808310610618575b5060200160038301600052602060002060005b83811061060457505050506080820151600482015560a08201516005820155600681019060c08301519160058310156105ee57600792815460ff610100600160a81b0360e088015160081b169216906affffffffffffffffffffff60a81b1617179055019061010060018060a01b03910151166001600160601b0360a01b825416179055600e5490600160401b8210156105d85761058c6105708360016105d49501600e55611324565b6004929192359083549060031b91821b91600019901b19161790565b90556040517f6f168c3e33ddaa0ce1c7b25a502362d7a4081cd5531222394816c427259a63ee60043591806105c185826113c0565b0390a260018055604051918291826113c0565b0390f35b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6001906020845194019381840155016104c6565b600384016000526020600020908382015b81830181106106395750506104b3565b60008155600101610629565b600190602084519401938184015501610473565b82516001600160a01b03168183015560209092019160010161041e565b9193969460009691939650600091600060015b15610747575b506000926106a6816106a18b88611422565b611422565b861561073157866106b8910691611a13565b93868060011b046002148715171561071b578660011b851115610689575060019297999593506106fa909891989694965b836106f48288611af9565b52611371565b838060a01b0391549060031b1c16610712828b611af9565b52019293610305565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6107518188611af9565b5115801590610776575b61068f5760019297999593506106fa909891989694966106e9565b5061078081611371565b60018060a01b0391549060031b1c16600052600a60205260ff600760406000200154161561075b565b60405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e74206e6f64657320666f7220686f702070617468006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420616374697665206e6f646573000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f56616c69646174696f6e20616c726561647920657869737473000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081d1c985b9cd858dd1a5bdb88125160521b6044820152606490fd5b604051633ee5aeb560e01b8152600490fd5b346101bb5760203660031901126101bb57600435600052600b6020526040600020805460048201546007600584015460068501549060ff82169560018060a01b03938491015416936040519586526020860152604085015260058510156105ee5760c094606085015260081c16608083015260a0820152f35b346101bb5760203660031901126101bb5767ffffffffffffffff6004358181116101bb57366023820112156101bb5780600401359182116101bb5736602483830101116101bb5760406024917fe13170823cb898d36530d9b68aa18c35c421d49906a760dbed76c8aa582768d5936109b7611aaf565b600160ff19818160095416176009556109ce611adb565b60025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25860208451338152a18083519485936020855282602086015201848401376000828201840152601f01601f19168101030190a1005b346101bb5760003660031901126101bb576020601054604051908152f35b346101bb5760003660031901126101bb576020601154604051908152f35b346101bb576020806003193601126101bb576004359033600052600a90600a815260018060a01b03918260406000205416610d3b578315610cf657600d549060005b828110610c825750505060405191610ac083611a22565b3383528183019284845260408101906103e89485835260608201958652608082016101f48152600760a08401936000855260c0810142815260e08201936001978886526101008401966000885233600052600a8c528a60406000209551166001600160601b0360a01b865416178555518985015551600284015560039a5160038401555160048301556005955160058301555160068201550190511515815460ff61ff00819551151560081b1692169061ffff191617179055600d5495600160401b96878110156105d8578085610b9a9201600d55611371565b81549060031b908733831b921b1916179055610bb7600f54611a13565b600f5560105460009390926000199086865b868110610c3d5750505050505050600052600c835280604060002001938454908110156105d8577fb098a592c213bb65419fbec76799a12091bcb1ab0dfc0890bbc386f7980378e394610c1f92820181556113a8565b819291549060031b9133831b921b19161790556040519283523392a2005b80600052600c8b52604060002083868201541680610c76575b610c64575b50018790610bc9565b8601549097509250879050868d610c5b565b50848782015410610c56565b84610c8c82611371565b90549060031b1c166000528184528560016040600020015414610cb157600101610aa9565b60405162461bcd60e51b815260048101859052601960248201527f44657669636520616c72656164792072656769737465726564000000000000006044820152606490fd5b60405162461bcd60e51b815260048101839052601a60248201527f496e76616c6964206465766963652066696e6765727072696e740000000000006044820152606490fd5b60405162461bcd60e51b815260048101839052601760248201527f4e6f646520616c726561647920726567697374657265640000000000000000006044820152606490fd5b346101bb5760003660031901126101bb576020601454604051908152f35b346101bb5760003660031901126101bb57610db7611aaf565b60ff19806009541660095560025460ff811615610dfe57166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152600490fd5b346101bb5760003660031901126101bb57600d5460009060008060005b838110610eae57509260ff918460a0951515928184600014610ea457610e5291611418565b925b15610e9b57610e6291611418565b600e54908360095416600014610e93576001925b604051958652602086015260408501526060840152166080820152f35b600092610e76565b50506000610e62565b5050600092610e54565b610eb781611371565b60018060a01b03809254600392831b1c16600052600a602081815260ff60076040600020015416610eef575b50505050600101610e2d565b9184959691610f4a93610f28869b610f5097610f0c60019a611371565b905490871b1c1660005283835260026040600020015490611422565b9a610f3289611371565b905490851b1c16600052526040600020015490611422565b93611a13565b9190868080610ee3565b346101bb5760203660031901126101bb57600435600d548110156101bb57610f83602091611371565b905460405160039290921b1c6001600160a01b03168152f35b346101bb5760003660031901126101bb576020600f54604051908152f35b346101bb5760003660031901126101bb5760e0600354600454600554600654600754906008549260ff6009541694604051968752602087015260408601526060850152608084015260a0830152151560c0820152f35b346101bb5760603660031901126101bb5761001b60443560243560043561143c565b346101bb5760003660031901126101bb576000546040516001600160a01b039091168152602090f35b346101bb5760203660031901126101bb57600435600e548110156101bb57611084602091611324565b90546040519160031b1c8152f35b346101bb5760003660031901126101bb576110ab611aaf565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101bb5760003660031901126101bb57602060ff600254166040519015158152f35b346101bb5760e03660031901126101bb57611127611aaf565b60043560035560243560045560443560055560643560065560843560075560a43560085560c4358015158091036101bb5760ff801960095416911617600955600080f35b346101bb5760203660031901126101bb576001600160a01b0361118c61130e565b16600052600a602052604060002060028101546105d460038301549260048101549060ff6007600583015492015416916040519586958693909594919260809360a086019786526020860152604085015260608401521515910152565b346101bb5760203660031901126101bb576101206001600160a01b038061120e61130e565b16600052600a60205260ff60406000209182541691600181015490600281015460038201546004830154906005840154926007600686015495015495604051988952602089015260408801526060870152608086015260a085015260c0840152818116151560e084015260081c161515610100820152f35b346101bb5760203660031901126101bb57600435600052600c602052604060002080546105d460028301549260038101549060ff6005600483015492015416916040519586958693909594919260809360a086019786526020860152604085015260608401521515910152565b346101bb5760003660031901126101bb576020906013548152f35b600435906001600160a01b03821682036101bb57565b600e5481101561135b57600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0190600090565b634e487b7160e01b600052603260045260246000fd5b600d5481101561135b57600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50190600090565b805482101561135b5760005260206000200190600090565b602090602060408183019282815285518094520193019160005b8281106113e8575050505090565b83516001600160a01b0316855293810193928101926001016113da565b8181029291811591840414171561071b57565b8115610731570490565b9190820180921161071b57565b9190820391821161071b57565b9182600052600b6020526040600020918254156119d75760068301549060ff821660058110156105ee5780159081156119cc575b501561198f5760018401548110156119565761148f81600186016113a8565b90543360039290921b1c6001600160a01b031603611919576114b481600386016113a8565b90549060031b1c6118dc5784916005850154906114e36103e86114dc60075460055490611405565b0483611422565b421161188c57505060608161153961151f7f9f9a24abfa4159ff78a90174d6f8c38350f9a18427e3888aec5cbf8840b0c23d94600289016113a8565b919091429083549060031b91821b91600019901b19161790565b90558461156361154c8360038a016113a8565b819391549060031b91821b91600019901b19161790565b905560ff19600687015416946001861760068801556040519133835260208301526040820152a260018281015460005b81811061185f575b50506115a657505050565b6002176006820155600501546115bc904261142f565b9080600052600b6020526040600020926115d860135434611405565b600185015490816103e88102046103e8148215171561071b576103e86115ff920290611418565b9160005b60018601548110156118265761161c81600188016113a8565b905460039190911b1c6001600160a01b03166000818152600a6020526040902091908115611800576002880161165283826113a8565b90549060031b1c60001984019184831161071b5761168092611673916113a8565b90549060031b1c9061142f565b600284015460038501546103e882810204820361071b576103e882810204928181106117b6575b5050506116c36103e8916012548082116117ae575b5088611405565b049260018060a01b0360068a015460081c1660018060a01b0360078b0154160361178d575b600581016116f68154611a13565b9055600642910155600083828115611783575b600092839283928392f115611777577f49649141d16971a88c3cfdd73fec34babb1cf163cf8b804c8f537a023c6ce5066080600194604051908152604060208201526015604082015274121bdc081d985b1a59185d1a5bdb881c995dd85c99605a1b6060820152a201611603565b6040513d6000823e3d90fd5b6108fc9250611709565b926117a8906127106117a16014548a611405565b0490611422565b926116e8565b9050386116bc565b816117c39293945061142f565b806103e88102046103e8148115171561071b576103e892836117ed6116c394826117f99502611418565b60011c91810204611422565b91386116a7565b6118216118108360028b016113a8565b905460058b01549160031b1c61142f565b611680565b509260409194507f904e55daf7719db8c05c9f2255e0e2adaca0456a2ffd23c9b357da28f6f03d4e9250815190600182526020820152a2565b61186c81600387016113a8565b90549060031b1c1561188057600101611593565b5050506000388061159b565b604094506118cd93507f904e55daf7719db8c05c9f2255e0e2adaca0456a2ffd23c9b357da28f6f03d4e95919250600460069160ff1916179101554261142f565b815190600082526020820152a2565b60405162461bcd60e51b8152602060048201526015602482015274121bdc08185b1c9958591e4818dbdb5c1b195d1959605a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274556e617574686f72697a656420686f70206e6f646560581b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840d0dee040d2dcc8caf607b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527456616c69646174696f6e206e6f742061637469766560581b6044820152606490fd5b600191501438611470565b60405162461bcd60e51b815260206004820152601460248201527315985b1a59185d1a5bdb881b9bdd08199bdd5b9960621b6044820152606490fd5b600019811461071b5760010190565b610120810190811067ffffffffffffffff8211176105d857604052565b90601f8019910116810190811067ffffffffffffffff8211176105d857604052565b67ffffffffffffffff81116105d85760051b60200190565b9091828110611a8757505050565b600091600052602060002092830192015b828110611aa457505050565b818155600101611a98565b6000546001600160a01b03163303611ac357565b60405163118cdaa760e01b8152336004820152602490fd5b60ff60025416611ae757565b60405163d93c066560e01b8152600490fd5b805182101561135b5760209160051b01019056fea2646970667358221220f92dd1bd9d3330ad03a12a7d0229dd7e04e855f3398ce7f828199e8059ac04a064736f6c63430008160033";

type HypermeshNetworkManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HypermeshNetworkManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HypermeshNetworkManager__factory extends ContractFactory {
  constructor(...args: HypermeshNetworkManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<HypermeshNetworkManager> {
    return super.deploy(
      owner,
      overrides || {}
    ) as Promise<HypermeshNetworkManager>;
  }
  override getDeployTransaction(
    owner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override attach(address: string): HypermeshNetworkManager {
    return super.attach(address) as HypermeshNetworkManager;
  }
  override connect(signer: Signer): HypermeshNetworkManager__factory {
    return super.connect(signer) as HypermeshNetworkManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HypermeshNetworkManagerInterface {
    return new utils.Interface(_abi) as HypermeshNetworkManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HypermeshNetworkManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HypermeshNetworkManager;
  }
}
