/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IOAppCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOAppCore__factory>;
    getContractFactory(
      name: "IOAppMsgInspector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOAppMsgInspector__factory>;
    getContractFactory(
      name: "IOAppOptionsType3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOAppOptionsType3__factory>;
    getContractFactory(
      name: "IOAppReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOAppReceiver__factory>;
    getContractFactory(
      name: "OAppOptionsType3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OAppOptionsType3__factory>;
    getContractFactory(
      name: "OApp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OApp__factory>;
    getContractFactory(
      name: "OAppCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OAppCore__factory>;
    getContractFactory(
      name: "OAppReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OAppReceiver__factory>;
    getContractFactory(
      name: "OAppSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OAppSender__factory>;
    getContractFactory(
      name: "IOAppPreCrimeSimulator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOAppPreCrimeSimulator__factory>;
    getContractFactory(
      name: "IPreCrime",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPreCrime__factory>;
    getContractFactory(
      name: "OAppPreCrimeSimulator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OAppPreCrimeSimulator__factory>;
    getContractFactory(
      name: "ILayerZeroEndpointV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroEndpointV2__factory>;
    getContractFactory(
      name: "ILayerZeroReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroReceiver__factory>;
    getContractFactory(
      name: "IMessageLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMessageLib__factory>;
    getContractFactory(
      name: "IMessageLibManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMessageLibManager__factory>;
    getContractFactory(
      name: "IMessagingChannel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMessagingChannel__factory>;
    getContractFactory(
      name: "IMessagingComposer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMessagingComposer__factory>;
    getContractFactory(
      name: "IMessagingContext",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMessagingContext__factory>;
    getContractFactory(
      name: "ISendLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISendLib__factory>;
    getContractFactory(
      name: "AddressCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressCast__factory>;
    getContractFactory(
      name: "IOFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOFT__factory>;
    getContractFactory(
      name: "OFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OFT__factory>;
    getContractFactory(
      name: "OFTCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OFTCore__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1363__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "BasicCAES",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasicCAES__factory>;
    getContractFactory(
      name: "AdvancedAntiSpeculationEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdvancedAntiSpeculationEngine__factory>;
    getContractFactory(
      name: "AdvancedDemurrageManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdvancedDemurrageManager__factory>;
    getContractFactory(
      name: "AntiSpeculationEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AntiSpeculationEngine__factory>;
    getContractFactory(
      name: "CaesarToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CaesarToken__factory>;
    getContractFactory(
      name: "CrossChainEconomicSync",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CrossChainEconomicSync__factory>;
    getContractFactory(
      name: "DemurrageManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DemurrageManager__factory>;
    getContractFactory(
      name: "EconomicEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EconomicEngine__factory>;
    getContractFactory(
      name: "StabilityPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StabilityPool__factory>;
    getContractFactory(
      name: "StripeIntegrationManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StripeIntegrationManager__factory>;
    getContractFactory(
      name: "CaesarCoinDEXFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CaesarCoinDEXFactory__factory>;
    getContractFactory(
      name: "CaesarCoinDEXPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CaesarCoinDEXPair__factory>;
    getContractFactory(
      name: "ICaesarCoinDEXFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICaesarCoinDEXFactory__factory>;
    getContractFactory(
      name: "ConsensusProofEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConsensusProofEngine__factory>;
    getContractFactory(
      name: "CrossChainRouteOptimizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CrossChainRouteOptimizer__factory>;
    getContractFactory(
      name: "DynamicEconomicsOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DynamicEconomicsOracle__factory>;
    getContractFactory(
      name: "HostRewardDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HostRewardDistributor__factory>;
    getContractFactory(
      name: "HypermeshNetworkManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HypermeshNetworkManager__factory>;
    getContractFactory(
      name: "ICaesar",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICaesar__factory>;
    getContractFactory(
      name: "IEconomicEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEconomicEngine__factory>;
    getContractFactory(
      name: "IStabilityPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStabilityPool__factory>;
    getContractFactory(
      name: "AdvancedMathUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdvancedMathUtils__factory>;
    getContractFactory(
      name: "MathUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MathUtils__factory>;
    getContractFactory(
      name: "MockAMM",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockAMM__factory>;
    getContractFactory(
      name: "MockChainlinkOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockChainlinkOracle__factory>;
    getContractFactory(
      name: "MockERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC20__factory>;
    getContractFactory(
      name: "MockLayerZeroEndpoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockLayerZeroEndpoint__factory>;
    getContractFactory(
      name: "MockLZEndpoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockLZEndpoint__factory>;
    getContractFactory(
      name: "MockLZEndpointV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockLZEndpointV2__factory>;
    getContractFactory(
      name: "MockPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPriceOracle__factory>;
    getContractFactory(
      name: "MockStripeOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockStripeOracle__factory>;
    getContractFactory(
      name: "MockTimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockTimelock__factory>;
    getContractFactory(
      name: "SimpleEconomicEngine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleEconomicEngine__factory>;
    getContractFactory(
      name: "GoldPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GoldPriceOracle__factory>;
    getContractFactory(
      name: "RateLimiter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RateLimiter__factory>;
    getContractFactory(
      name: "SimpleCAES",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleCAES__factory>;

    getContractAt(
      name: "IOAppCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOAppCore>;
    getContractAt(
      name: "IOAppMsgInspector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOAppMsgInspector>;
    getContractAt(
      name: "IOAppOptionsType3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOAppOptionsType3>;
    getContractAt(
      name: "IOAppReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOAppReceiver>;
    getContractAt(
      name: "OAppOptionsType3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OAppOptionsType3>;
    getContractAt(
      name: "OApp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OApp>;
    getContractAt(
      name: "OAppCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OAppCore>;
    getContractAt(
      name: "OAppReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OAppReceiver>;
    getContractAt(
      name: "OAppSender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OAppSender>;
    getContractAt(
      name: "IOAppPreCrimeSimulator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOAppPreCrimeSimulator>;
    getContractAt(
      name: "IPreCrime",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPreCrime>;
    getContractAt(
      name: "OAppPreCrimeSimulator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OAppPreCrimeSimulator>;
    getContractAt(
      name: "ILayerZeroEndpointV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILayerZeroEndpointV2>;
    getContractAt(
      name: "ILayerZeroReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILayerZeroReceiver>;
    getContractAt(
      name: "IMessageLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMessageLib>;
    getContractAt(
      name: "IMessageLibManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMessageLibManager>;
    getContractAt(
      name: "IMessagingChannel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMessagingChannel>;
    getContractAt(
      name: "IMessagingComposer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMessagingComposer>;
    getContractAt(
      name: "IMessagingContext",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMessagingContext>;
    getContractAt(
      name: "ISendLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISendLib>;
    getContractAt(
      name: "AddressCast",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressCast>;
    getContractAt(
      name: "IOFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOFT>;
    getContractAt(
      name: "OFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OFT>;
    getContractAt(
      name: "OFTCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OFTCore>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "IERC1363",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1363>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "SafeERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "ECDSA",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "SafeCast",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "Strings",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "BasicCAES",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasicCAES>;
    getContractAt(
      name: "AdvancedAntiSpeculationEngine",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdvancedAntiSpeculationEngine>;
    getContractAt(
      name: "AdvancedDemurrageManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdvancedDemurrageManager>;
    getContractAt(
      name: "AntiSpeculationEngine",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AntiSpeculationEngine>;
    getContractAt(
      name: "CaesarToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CaesarToken>;
    getContractAt(
      name: "CrossChainEconomicSync",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CrossChainEconomicSync>;
    getContractAt(
      name: "DemurrageManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DemurrageManager>;
    getContractAt(
      name: "EconomicEngine",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EconomicEngine>;
    getContractAt(
      name: "StabilityPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StabilityPool>;
    getContractAt(
      name: "StripeIntegrationManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StripeIntegrationManager>;
    getContractAt(
      name: "CaesarCoinDEXFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CaesarCoinDEXFactory>;
    getContractAt(
      name: "CaesarCoinDEXPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CaesarCoinDEXPair>;
    getContractAt(
      name: "ICaesarCoinDEXFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICaesarCoinDEXFactory>;
    getContractAt(
      name: "ConsensusProofEngine",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConsensusProofEngine>;
    getContractAt(
      name: "CrossChainRouteOptimizer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CrossChainRouteOptimizer>;
    getContractAt(
      name: "DynamicEconomicsOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DynamicEconomicsOracle>;
    getContractAt(
      name: "HostRewardDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HostRewardDistributor>;
    getContractAt(
      name: "HypermeshNetworkManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HypermeshNetworkManager>;
    getContractAt(
      name: "ICaesar",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICaesar>;
    getContractAt(
      name: "IEconomicEngine",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEconomicEngine>;
    getContractAt(
      name: "IStabilityPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStabilityPool>;
    getContractAt(
      name: "AdvancedMathUtils",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdvancedMathUtils>;
    getContractAt(
      name: "MathUtils",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MathUtils>;
    getContractAt(
      name: "MockAMM",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockAMM>;
    getContractAt(
      name: "MockChainlinkOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockChainlinkOracle>;
    getContractAt(
      name: "MockERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC20>;
    getContractAt(
      name: "MockLayerZeroEndpoint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockLayerZeroEndpoint>;
    getContractAt(
      name: "MockLZEndpoint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockLZEndpoint>;
    getContractAt(
      name: "MockLZEndpointV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockLZEndpointV2>;
    getContractAt(
      name: "MockPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPriceOracle>;
    getContractAt(
      name: "MockStripeOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockStripeOracle>;
    getContractAt(
      name: "MockTimelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockTimelock>;
    getContractAt(
      name: "SimpleEconomicEngine",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleEconomicEngine>;
    getContractAt(
      name: "GoldPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GoldPriceOracle>;
    getContractAt(
      name: "RateLimiter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RateLimiter>;
    getContractAt(
      name: "SimpleCAES",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleCAES>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
